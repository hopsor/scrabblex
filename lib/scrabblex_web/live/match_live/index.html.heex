<div class="bg-white shadow">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <.header>
      Listing Matches
      <:actions>
        <.link patch={~p"/matches/new"}>
          <.button>
            <.icon name="hero-plus" /> New Match
          </.button>
        </.link>
      </:actions>
    </.header>
  </div>
</div>

<div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
  <.table
    id="matches"
    rows={@streams.matches}
    row_click={fn {_id, match} -> JS.navigate(~p"/m/#{match}") end}
  >
    <:col :let={{_id, match}} label="Id"><%= match.friendly_id %></:col>
    <:col :let={{_id, match}} label="Participants">
      <div class="flex -space-x-2 overflow-hidden">
        <.avatar
          :for={user <- Enum.map(match.players, & &1.user)}
          user={user}
          title={user.name}
          class="ring-2 ring-white"
        />
      </div>
    </:col>
    <:col :let={{_id, match}} label="Visibility">
      <span :if={match.private}>
        <.icon name="hero-eye-slash" /> Private
      </span>
      <span :if={!match.private}>
        <.icon name="hero-eye" /> Public
      </span>
    </:col>
    <:col :let={{_id, match}} label="Created at">
      <%= Scrabblex.Cldr.DateTime.to_string!(match.inserted_at, format: :short) %>
    </:col>
    <:col :let={{_id, match}} label="Lexicon"><%= match.lexicon.name %></:col>
    <:col :let={{_id, match}} label="Status"><%= match.status %></:col>
  </.table>
</div>

<.modal :if={@live_action == :new} id="match-modal" show on_cancel={JS.patch(~p"/matches")}>
  <.live_component
    module={ScrabblexWeb.MatchLive.FormComponent}
    id={@match.id || :new}
    title={@page_title}
    action={@live_action}
    match={@match}
    current_user={@current_user}
    patch={~p"/matches"}
  />
</.modal>
